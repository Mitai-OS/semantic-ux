#!/usr/bin/env bash

RPAD="             "

if [ -z "${XDG_DATA_HOME}" ]; then
    export XDG_DATA_HOME="${HOME}/.local/share"
fi

mkdir -p "${XDG_DATA_HOME}/applications"
echo '[Desktop Entry]
Name=Magic Menu
Exec=magic-menu %f
Type=Application
MimeType=application/x-magic-menu;
' > "${XDG_DATA_HOME}/applications/magic-menu.desktop"

mkdir -p "${XDG_DATA_HOME}/mime/packages"
echo '<?xml version="1.0" encoding="UTF-8"?>
<mime-info xmlns="http://www.freedesktop.org/standards/shared-mime-info">
  <mime-type type="application/x-magic-menu">
    <comment>Magic Menu Script</comment>
    <magic priority="100">
      <match type="string" value="#@/bin/magic-menu -c" offset="0"/>
    </magic>
    <glob-deleteall/>
  </mime-type>
</mime-info>
' > "${XDG_DATA_HOME}/mime/packages/magic-menu.xml"


update-mime-database "${XDG_DATA_HOME}/mime"
update-desktop-database "${XDG_DATA_HOME}/applications"
xdg-mime default magic-menu.desktop application/x-magic-menu

PID=""

function monitorate-applications-dir {
    shopt -s nullglob

    local directories=()
    for dir in "${1}"/*; do
        directories+=("${dir}/Aplicativos")
    done

    inotifywait -m -e create -e delete --format '%w%f' "${meu_array[@]}" |
    while IFS= read -r applications_dir; do
      dir=$(dirname "${applications_dir}")
      name=$(basename "${dir}")
      desktop=$(echo -n "${name}" | tr '[:space:]' '_')

      mimetypes=$(grep "MimeType=" "${applications_dir}"/* | cut -d\= -f2 | tr ';' '\n' | sort -u | tr '\n' ';')

      (
        echo "[Desktop Entry]"
        echo "MimeType=${mimetypes}"
        grep -Ev "\[Desktop Entry\]|^MimeType=" "${XDG_DATA_HOME}/applications/magic-${desktop}.desktop"
      ) >"${XDG_DATA_HOME}/applications/magic-${desktop}.desktop"

      
    done

    shopt -u nullglob
}

function monitorate-group-dir {
    inotifywait -m -e create -e delete --format '%e %w%f' "${1}" |
    while IFS= read -r line; do
        case "${line}" in DELETE*)
          dir=$(echo -n "${line}" | cut -c 8-)
          name=$(basename "${dir}")
          desktop=$(echo -n "${name}" | tr '[:space:]' '_')

          rm "${XDG_DATA_HOME}/applications/magic-${desktop}.desktop"
          continue
        esac

        case "${line}" in CREATE*)
            if [ ! "${PID}" = "" ]; then
                kill "${PID}"
            fi
            
            monitorate-applications-dir "${1}" &
            PID=${!};

        esac
    done
}

function get-name {
    local name=$(kdialog --inputbox "Qual nome deve aparecer no menu?${RPAD}" \
                         --title "Passo 1/3 - Escolha um nome")
    if [ "${name}" = "" ]; then
        kdialog --warningcontinuecancel "Você precisa fornecer um nome para continuar${RPAD}\n" \
                --title "Passo 1/3 - Escolha um nome" --continue-label "Escolher um nome" || exit ;
        get-name;
      return 0
    fi
    echo -n "${name}"
}

function get-icon {
    local icon=$(kdialog --geticon --title "Passo 2/3 - Escolha um ícone")
    if [ "${icon}" = "" ]; then
        kdialog --warningcontinuecancel "Você precisa fornecer um ícone para continuar${RPAD}\n" \
                --title "Passo 2/3 - Escolha um ícone" --continue-label "Escolher um ícone" || exit ;
        get-icon;
      return 0
    fi
    echo -n "${icon}"
}

function create-group {
    local name=$(get-name | tr '/' ' ' | tr '\' ' ')
    local icon=$(get-icon)
    local desktop=$(echo -n "${name}" | tr '[:space:]' '_')

    chmod u+wx "${HOME}/Menu de aplicativos/"
    
    mkdir -p "${HOME}/Menu de aplicativos/${name}"
    mkdir -p "${HOME}/Menu de aplicativos/${name}/Modelos"
    mkdir -p "${HOME}/Menu de aplicativos/${name}/Aplicativos"
    echo '[Desktop Entry]
Icon=start-here-kde-plasma' > "${HOME}/Menu de aplicativos/${name}/.directory"


    chmod a-w "${HOME}/Menu de aplicativos/"
    chmod a-w "${HOME}/Menu de aplicativos/${name}"

    kdialog --msgbox "Grupo criado com sucesso!

1) Arraste os aplicativos que deseja agrupar para do Menu de Aplicativos
para a pasta 'Menu de aplicativos', quando fizer isso uma pasta será criada
em '~/Menu de aplicativos/${name}/Modelos'

2) Nessa pasta você pode adicionar os modelos de arquivos para serem criados
com o aplicativo

3) Se você definir para abrir um arquivo com esse grupo, o aplicativo interno
correto será usa usado para abrir, se tiver mais de um que pode abrir o arquivo
você poderá escolher qual vai abrir o arquivo

"
  echo "[Desktop Entry]
Name=${name}
Exec=/usr/bin/magic-menu-player ${desktop} %f
Icon=${icon}
Type=Application
X-Data-Directory="${name}"
" > "${XDG_DATA_HOME}/applications/magic-${desktop}.desktop"
}

function create-structure {
    shopt -s nullglob

    if [ -d "${HOME}/Menu de aplicativos/" ]; then
        chmod -R a+w "${HOME}/Menu de aplicativos/"
    fi

    mkdir -p "${HOME}/Menu de aplicativos/Agrupar"
    mkdir -p "${HOME}/Menu de aplicativos/Ocultar"

    echo '[Desktop Entry]
Icon=start-here-kde-plasma' > "${HOME}/Menu de aplicativos/.directory"

    echo '[Desktop Entry]
Icon=object-group' > "${HOME}/Menu de aplicativos/Agrupar/.directory"

    echo -n '#@/bin/magic-menu -c' > "${HOME}/Menu de aplicativos/Criar novo grupo"

    echo '[Desktop Entry]
Icon=view-hidden' > "${HOME}/Menu de aplicativos/Ocultar/.directory"

    chmod -R a-w "${HOME}/Menu de aplicativos/"

    chmod u+wx "${HOME}/Menu de aplicativos/Ocultar"
    chmod a-w "${HOME}/Menu de aplicativos/.directory"

    for template_dir in "${HOME}/Menu de aplicativos/Agrupar"/*/"Modelos"; do
        chmod -R u+wx "${template_dir}"
    done

    for application_dir in "${HOME}/Menu de aplicativos/Agrupar"/*/"Aplicativos"; do
        chmod -R u+wx "${application_dir}"
    done

    shopt -u nullglob
}

# Foi criado a partir do arquivo "Criar novo grupo"
if [ -f "${1}" ]; then
    create-structure
    create-group 
    exit
fi

create-structure

monitorate-group-dir "${HOME}/Menu de aplicativos/Agrupar" &
